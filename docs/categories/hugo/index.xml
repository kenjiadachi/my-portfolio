<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on CPX</title>
    <link>https://cpx.business/categories/hugo/</link>
    <description>Recent content in Hugo on CPX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>dachiken</copyright>
    <lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cpx.business/categories/hugo/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Hugo]SEOのためにやったことをまとめてみた</title>
      <link>https://cpx.business/blog/seo-in-hugo/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/seo-in-hugo/</guid>
      <description>※こちらの記事は公開しながらどんどん追記していく形で書いていこうと思っています。
定期的にご確認いただくことをオススメします！
 ブログでアフィリエイト！とかは考えていないのですが、せっかく書いたものは多くの人に見てもらいたいですよね。
この記事では、このHugoで作成したブログでSEOのために行った技術的な工夫をご紹介します。
 テーマのhtmlタグに問題がないか調べる はじめに、採用したテーマで自動生成されるhtmlタグに問題がないか確認をしました。
極端なはなし、pタグしか使われていないテーマだとどこがタイトルで…とかの判断ができずにクローリングbot空の可読性が悪いですからね。
マークダウンに対応するごとのhtmlタグを確認するのは、chromeの拡張機能で行いました。
僕の使用しているテーマである、future-imperfect-slimでは特に問題なさそうでしたので、そのままにしています。
 GTMをつける つぎに、Googleタグマネージャーのための設定を行いました。
僕の使用しているテーマである、future-imperfect-slimには、Google Analytics用の設定はあったのですが、Googleタグマネージャー用の設定はなかったので、ここは自分で設定しました。
僕の場合、以下のような形に設定を行いました。
config.tomlで設定値を行った方が綺麗だなとは思いつつ、自分一人だけなので…ww
# site/layouts/partials/head.html &amp;lt;head&amp;gt; {{ partial &amp;quot;gtm&amp;quot; . }} &amp;lt;!-- 以下省略--&amp;gt; &amp;lt;/head&amp;gt; # site/layouts/partials/site-header.html {{ partial &amp;quot;gtm-body&amp;quot; . }} &amp;lt;!-- 以下省略--&amp;gt; # site/layouts/partials/gtm.html {{ if not .Site.IsServer }} &amp;lt;!-- Google Tag Manager --&amp;gt; &amp;lt;script&amp;gt;(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({&#39;gtm.start&#39;: new Date().getTime(),event:&#39;gtm.js&#39;});var f=d.getElementsByTagName(s)[0], j=d.createElement(s),dl=l!=&#39;dataLayer&#39;?&#39;&amp;amp;l=&#39;+l:&#39;&#39;;j.async=true;j.src= &#39;https://www.googletagmanager.com/gtm.js?id=&#39;+i+dl;f.parentNode.insertBefore(j,f); })(window,document,&#39;script&#39;,&#39;dataLayer&#39;,&#39;XXXXXXXXXX&#39;);&amp;lt;/script&amp;gt; ←ここの&#39;XXXXXXXXXXX&#39;には自分のタグマネージャIDを入れてください &amp;lt;!-- End Google Tag Manager --&amp;gt; {{ end }} # site/layouts/partials/gtm.html {{ if not .</description>
    </item>
    
    <item>
      <title>[Hugo]Hugoを使いこなすためのオススメファイル構造</title>
      <link>https://cpx.business/blog/file-structure-for-mastering-hugo/</link>
      <pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/file-structure-for-mastering-hugo/</guid>
      <description>&lt;p&gt;しばらくHugoを使う中で気づいたのが、よくファイル構造に迷わされるということ。&lt;/p&gt;
&lt;p&gt;いろいろ方法は準備してくれているのですが、そのどれをどのタイミングで使うかにいつも迷ってしまうんですよね…&lt;/p&gt;
&lt;p&gt;3ヶ月ほどHugoを使ってきたので、その中で落ち着いたファイル構造について今回はまとめてみました。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Hugo]faviconを設定する方法</title>
      <link>https://cpx.business/blog/how-to-set-favicon/</link>
      <pubDate>Fri, 28 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-set-favicon/</guid>
      <description>&lt;p&gt;Hugoで作成したこちらのページに、faviconを設定してみました。&lt;/p&gt;
&lt;p&gt;この記事では、Hugoで作られたページにfaviconを設定する方法についてご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Hugo]Docker上で管理できるポートフォリオを作ってみたよ</title>
      <link>https://cpx.business/blog/how-to-create-this-page/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-create-this-page/</guid>
      <description>&lt;p&gt;Hugoをつかってこのページを作ってみたので、作り方をまとめてみました。&lt;/p&gt;
&lt;p&gt;ローカルでは、Dockerを用いて仮想環境上で動かしています。&lt;/p&gt;
&lt;p&gt;また、ホスティングサービスはGitHub Pagesを用いています。&lt;/p&gt;
&lt;p&gt;この記事では、HugoをDocker上で動かし、それをGitHub Pagesで公開するまでをご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>