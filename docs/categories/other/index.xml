<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Other on CPX</title>
    <link>https://cpx.business/categories/other/</link>
    <description>Recent content in Other on CPX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>dachiken</copyright>
    <lastBuildDate>Sat, 23 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cpx.business/categories/other/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>マッチングシステム構築はじめの一歩 ざっくりシステム3パターン</title>
      <link>https://cpx.business/blog/first-step-for-create-matching-system/</link>
      <pubDate>Sat, 23 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/first-step-for-create-matching-system/</guid>
      <description>&lt;p&gt;webサービスを作ってみたい！と思った時、イメージするのはおよそ以下の3つじゃないでしょうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TODOリスト&lt;/li&gt;
&lt;li&gt;SNS&lt;/li&gt;
&lt;li&gt;マッチングサービス&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;もちろん、突き詰めればそれぞれすごくややこしいシステムになっていきます。&lt;/p&gt;
&lt;p&gt;最もシンプルな仕組みを考えた時に下に行く方が難しいイメージですね。&lt;/p&gt;
&lt;p&gt;今回はこの中でマッチングシステムを作りたい！となった時に考えるべき、「どんなマッチングシステムにすべきか？」をまとめてみました。&lt;/p&gt;
&lt;p&gt;(実はコンサルティングの仕事のついでというのは秘密)&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Git]BitbucketからGitHubに移行しました</title>
      <link>https://cpx.business/blog/how-to-move-from-bitbucket-to-github/</link>
      <pubDate>Sun, 10 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-move-from-bitbucket-to-github/</guid>
      <description>&lt;p&gt;2019/01にGitHubのPrivateリポジトリが無料で無制限に作れるようになりましたね。&lt;/p&gt;
&lt;p&gt;GitHub買収したMicrosoftさまさまといったところでしょうか。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.blog/2019-01-07-new-year-new-github/&#34;&gt;元ニュース&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;それまではPrivateリポジトリはBitbucket、PublicにしてもいいものはGitHubで管理していたのですが、めんどくさかったのですべてGitHubに移行しました。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[Heroku]Heroku上に既存の本番環境からステージング環境を作成</title>
      <link>https://cpx.business/blog/copy-the-staging-environment-on-heroku/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/copy-the-staging-environment-on-heroku/</guid>
      <description>2018/03/23追記:
この記事に書いている方法ではできなくなったみたいです。
参照: heroku fork is deprecated and will be sunset 2017-12-01
 ※こちらの記事は、Qiitaにて公開していたものを2020/03/01にこちらに移行しています。
元記事はこちら
※現在はこちらのページのURLのみ記載されています。
 LiveDeliはHeroku上で動いているのですが、本番環境一つでは他人に開発中のものを見てもらいたい時などに不便を感じたので、ステージング環境を作成してみました。
基本的にHeroku で既存の本番環境をコピーしてステージング環境を作るを見ながらごちゃごちゃしてたらできました。
 本番環境からforkする terminal上で、heroku fork --from sourceapp --to targetappでできます。 targetappは未作成でも自動で作成してくれました。
 リモートリポジトリを作成する アプリケーション名が明示されたリモートリポジトリを作成しておくことで、heroku関連の操作をする際のミスが少なくなるはず。
git remote add targetapp git@heroku.com:targetapp.gitのようにしておきましょう。
ただ、この作業を行った時点のブランチ名がリモートリポジトリにも引き継がれてしまいます。
Herokuはmasterブランチじゃないとbuildしてくれないので、masterブランチに切り替えてからこの操作をするようにしてください。
 参考: ブランチ名を切り替え忘れた際にすること Herokuにmasterブランチ以外をdeployする方法を参考にして、git push heroku [間違えてできたブランチ名]:master --forceとすることで、masterブランチを[間違えてできたブランチ]と同じ状態にできます。
 おまけ LiveDeliはSEOのため、[SEO対策] Railsでherokuapp.comを正しいFQDNへリダイレクトさせるのensure_domainを設定しています。
同様の設定をされている場合は、ステージング環境の場合のみbefore_action :ensure_domainをコメントアウトしておきましょう。
 参考にした記事  Heroku で既存の本番環境をコピーしてステージング環境を作る Herokuにmasterブランチ以外をdeployする方法 [SEO対策] Railsでherokuapp.comを正しいFQDNへリダイレクトさせる  </description>
    </item>
    
  </channel>
</rss>