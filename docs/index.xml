<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CPX</title>
    <link>https://cpx.business/</link>
    <description>Recent content on CPX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Mon, 06 Jan 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cpx.business/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Hugo]Docker上で管理できるポートフォリオを作ってみたよ</title>
      <link>https://cpx.business/blog/how-to-create-this-page/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-create-this-page/</guid>
      <description>&lt;p&gt;Hugoをつかってこのページを作ってみたので、作り方をまとめてみました。&lt;/p&gt;
&lt;p&gt;ローカルでは、Dockerを用いて仮想環境上で動かしています。&lt;/p&gt;
&lt;p&gt;また、ホスティングサービスはGitHub Pagesを用いています。&lt;/p&gt;
&lt;p&gt;この記事では、HugoをDocker上で動かし、それをGitHub Pagesで公開するまでをご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Hugo]faviconを設定する方法</title>
      <link>https://cpx.business/blog/how-to-set-favicon/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-set-favicon/</guid>
      <description>&lt;p&gt;Hugoで作成したこちらのページに、faviconを設定してみました。&lt;/p&gt;
&lt;p&gt;この記事では、Hugoで作られたページにfaviconを設定する方法を紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Rails]enumの値を日本語化してラジオボタンに突っ込む</title>
      <link>https://cpx.business/blog/how-to-create-radio-button-using-enum/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-create-radio-button-using-enum/</guid>
      <description>前提条件 こんなモデルがあったとして
# models/user.rb class User &amp;lt; ApplicationRecord enum area: {east: 0, west: 1} # (以下略) end enum_helpというgemを入れたとして
# Gemfile gem &amp;#39;enum_help&amp;#39; enumの値に対応した日本語をja.ymlに入れたとして
# ja.yml ja: enums: user: area: east: 関東 west: 関西 そこから、どうやってlabelに日本語、valueに英語が入ったのラジオボタンを作るかという話です。
 結論 こんな感じでできました！嬉しい！
# users/_form.haml = form_for(@user) do |f| = f.collection_radio_buttons :area, User.areas_i18n, :first, :last, include_hidden: false do |b| - content_tag(:div, class: &amp;quot;wrapper-class&amp;quot;) do - b.radio_button(class: &amp;quot;button-class&amp;quot;) + b.label(class: &amp;quot;label-class&amp;quot;) = f.submit collection_radio_buttonsというメソッドがあるんですね。 ただ、f.collection_radio_buttonsとは少し違うようです。 詳しくはここに書いてました。 日本語でなんとなくイメージを掴みたいならこの記事が読みやすかったです。</description>
    </item>
    
    <item>
      <title>[Rails]検索情報を保持するcheck_box_tagの作り方</title>
      <link>https://cpx.business/blog/how-to-create-check_box_tag/</link>
      <pubDate>Mon, 06 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-create-check_box_tag/</guid>
      <description>困りごと ransackの検索後の画面を見たときに検索条件がcheck_boxに保持されていないので、検索条件がわからない！
(URLを見ればわかるけど、ユーザーにそこまでのリテラシーがあるとも思えない…)
 前提条件 enumで値を扱っている # models/post.rb class Post &amp;lt; ApplicationRecord enum tag: { report: 0, interview: 1, info: 2} # 以下略 end  enum_helpで日本語化している # Gemfile gem &amp;#39;enum_help&amp;#39; # config/locales/ja.yml ja: enums: post: tag: report: 開催レポート interview: インタビュー info: お知らせ  ransackで検索を実装している # controllers/posts_controller.rb class PostsController &amp;lt; ApplicationController def index @search = Post.ransack(params[:q]) @result = @search.result end # 以下略 end / views/posts/index.html.haml = search_form_for @search do |f| /　以下略 = f.</description>
    </item>
    
    <item>
      <title>À propos de Hugo</title>
      <link>https://cpx.business/about/_index.fr/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/about/_index.fr/</guid>
      <description>Hugo est un moteur de site statique écrit en Go.
Il utilise une variété de projets open source, notamment:
 [Cobra] (https://github.com/spf13/cobra) [Viper] (https://github.com/spf13/viper) [J Walter Weatherman] (https://github.com/spf13/jWalterWeatherman) [Cast] (https://github.com/spf13/cast)  En savoir plus et contribuer sur [GitHub] (https://github.com/spf13).
Installer Quelques faits amusants sur [Hugo] (http://gohugo.io/):
 Construit en [Go] (http://golang.org/) Librement inspiré par [Jekyll] (http://jekyllrb.com/) Principalement développé par [spf13] (http://spf13.com/) dans le train lors d&#39;un trajet aller-retour pour Manhattan. Codé dans [Vim] (http://vim.</description>
    </item>
    
    <item>
      <title>Contato</title>
      <link>https://cpx.business/contact/_index.br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/contact/_index.br/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>