<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>refactor on CPX</title>
    <link>https://cpx.business/tags/refactor/</link>
    <description>Recent content in refactor on CPX</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>dachiken</copyright>
    <lastBuildDate>Wed, 12 Aug 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://cpx.business/tags/refactor/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[git]submoduleを使いこなそう</title>
      <link>https://cpx.business/blog/how-to-use-git-submodule/</link>
      <pubDate>Wed, 12 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-use-git-submodule/</guid>
      <description>&lt;p&gt;近年のwebサービスだと、フロントとバックで別サーバーになっていたりすることが多いと思います。&lt;/p&gt;
&lt;p&gt;大きなサービスになってくると、そこにバッチサーバーが入ったり、アカウント管理だけ切り出して…とか。&lt;/p&gt;
&lt;p&gt;マイクロサービス化的な話かと思いますが、サービス自体はシンプルになる一方インフラはどんどん複雑になってきますよね。&lt;/p&gt;
&lt;p&gt;そんな昨今、手放せないスキルであるgitのsubmoduleについて今回はご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[CircleCI]CircleCIを上手に使おう</title>
      <link>https://cpx.business/blog/how-to-use-circleci/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-use-circleci/</guid>
      <description>&lt;p&gt;CIツールで企業では一番ポピュラーに使われているのでは？というCircleCI。&lt;/p&gt;
&lt;p&gt;使いはじめはPRを作成する度怒られてイラだちを覚えるツールでしたが、今はすっかり通った時の快感に魅了されています。&lt;/p&gt;
&lt;p&gt;今回は、そんなCircleCIを使いこなせるようになりたいということで自分の環境に追加してみたので、そのやり方をご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Rails]Docker環境上でbinding.pryを使う</title>
      <link>https://cpx.business/blog/how-to-use-binding-pry-on-docker/</link>
      <pubDate>Sun, 02 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-use-binding-pry-on-docker/</guid>
      <description>&lt;p&gt;&lt;code&gt;binding.pry&lt;/code&gt;。とりあえずデバッグのときに何回も試すアレですね。&lt;/p&gt;
&lt;p&gt;今回はそれをDocker上でできる方法をご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Rails]ridgepoleを使おう</title>
      <link>https://cpx.business/blog/how-to-use-ridgepole/</link>
      <pubDate>Fri, 31 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-use-ridgepole/</guid>
      <description>&lt;p&gt;&lt;code&gt;bundle exec rails db:migrate&lt;/code&gt;ってこれまで何回実行したことでしょうか。&lt;/p&gt;
&lt;p&gt;migrationファイルが間違っていたら&lt;code&gt;bundle exec rails db:rollback&lt;/code&gt;して、みたいな…&lt;/p&gt;
&lt;p&gt;初心者のうちは特に経験することが多いんじゃないでしょうか。&lt;/p&gt;
&lt;p&gt;今日はそんなmigrationを行わなくてもいいようなgemの&lt;code&gt;ridgepole&lt;/code&gt;をご紹介します。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>[Rails]rails_best_practicesを使おう</title>
      <link>https://cpx.business/blog/how-to-use-rails-best-practices/</link>
      <pubDate>Wed, 29 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://cpx.business/blog/how-to-use-rails-best-practices/</guid>
      <description>&lt;p&gt;リファクタリング、CI、コードレビュー。&lt;/p&gt;
&lt;p&gt;どんな言葉が適切かはわからないのですが、最近こんな文脈にハマっています。&lt;/p&gt;
&lt;p&gt;自分は間違ってないんだなという気持ちにさせてくれるのがすごく素敵…&lt;/p&gt;
&lt;p&gt;今回はそんなツールの中の一つ、rails_best_practicesというgemを紹介したいと思います。&lt;/p&gt;
&lt;hr&gt;</description>
    </item>
    
  </channel>
</rss>